{"version":3,"file":"static/js/205.e7d582f0.chunk.js","mappings":"4MACA,EAA8B,iCAA9B,EAA8E,kCAA9E,EAA+H,kCAA/H,EAAoL,sC,SCAvKA,EAAc,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EACnBC,EAAe,SAAAH,GAAK,OAAIA,EAAMC,SAASG,SAAnB,EACpBC,EAAW,SAAAL,GAAK,OAAIA,EAAMC,SAASK,KAAnB,EAGhBC,EAAkB,SAAC,GAA0B,IAAxBN,EAAuB,EAAvBA,SAAUO,EAAa,EAAbA,OAC1C,IAAKA,EACH,OAAOP,EAASC,MAElB,IAAMO,EAAmBD,EAAOE,cAOhC,OANeT,EAASC,MAAMM,QAAO,YAAsB,IAAnBG,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAC5C,OACED,EAAKD,cAAcG,SAASJ,IAC5BG,EAAMF,cAAcG,SAASJ,EAEhC,GAEF,E,6BCZc,SAASK,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAcC,EAAAA,EAAAA,IAAYnB,GAoBhC,OACE,kBAAMoB,SAnBa,SAAAC,GACnBA,EAAIC,iBACJ,IAAMC,EAAOF,EAAIG,OAAOC,SAEtBP,EAAYQ,MACV,SAAAC,GAAO,OACLA,EAAQf,KAAKD,cAAciB,SAC3BL,EAAKX,KAAKiB,MAAMlB,cAAciB,MAFzB,KAKTE,IAAAA,OAAAA,QAAA,kBAAmCP,EAAKX,KAAKiB,MAA7C,mBACAR,EAAIU,cAAcC,UAElBhB,GAASiB,EAAAA,EAAAA,IAAW,CAAErB,KAAMW,EAAKX,KAAKiB,MAAOhB,MAAOU,EAAKW,OAAOL,SAChER,EAAIU,cAAcC,QAErB,EAG+BG,UAAWC,EAAzC,WACE,mBAAOD,UAAWC,EAAlB,kBAEE,kBACED,UAAWC,EACXC,KAAK,OACLzB,KAAK,OACL0B,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAGZ,mBAAOL,UAAWC,EAAlB,oBAEE,kBACED,UAAWC,EACXC,KAAK,MACLzB,KAAK,SACL0B,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAGZ,mBAAQH,KAAK,SAASF,UAAWC,EAAjC,2BAKL,CCxDD,MAA8B,iCAA9B,EAA4E,gCAA5E,EAA2H,kCCqC3H,EA/BoB,WAClB,IAAMlC,GAAWiB,EAAAA,EAAAA,IAAYX,GACvBQ,GAAWC,EAAAA,EAAAA,MAMjB,OAJAwB,EAAAA,EAAAA,YAAU,WACRzB,GAAS0B,EAAAA,EAAAA,MACV,GAAE,CAAC1B,KAGF,eAAImB,UAAWC,EAAf,SACuB,IAApBlC,EAASyC,OACRzC,EAAS0C,KAAI,SAAAjB,GAAO,OAClB,gBAAIQ,UAAWC,EAAf,WACE,4BAAOT,EAAQf,KAAf,QACA,4BAAOe,EAAQd,MAAf,QACA,mBACEsB,UAAWC,EACXC,KAAK,SACLQ,QAAS,kBAAM7B,GAAS8B,EAAAA,EAAAA,IAAcnB,EAAQoB,IAArC,EAHX,sBAHkCpB,EAAQoB,GAD1B,KAcpB,kDAIP,E,oBC1Bc,SAASC,IACtB,IAAMhC,GAAWC,EAAAA,EAAAA,MACXZ,GAAYc,EAAAA,EAAAA,IAAYf,GACxBG,GAAQY,EAAAA,EAAAA,IAAYb,GAM1B,OAJAmC,EAAAA,EAAAA,YAAU,WACRzB,GAAS0B,EAAAA,EAAAA,MACV,GAAE,CAAC1B,KAGF,iCACE,SAACD,EAAD,KACA,SAAC,KAAD,CAASkC,SAAS,aAAaC,cAAc,IAC5C7C,IAAcE,IAAS,SAAC4C,EAAA,EAAD,KACxB,SAAC,EAAD,MAGL,C","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/selector.js","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","pages/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contactForm\":\"ContactForm_contactForm__y0Rca\",\"contactLabel\":\"ContactForm_contactLabel__vt5it\",\"contactInput\":\"ContactForm_contactInput__z6XOX\",\"buttonAddContact\":\"ContactForm_buttonAddContact__uUTAm\"};","\nexport const getContacts = state => state.contacts.items;\nexport const getIsLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\nexport const getFilter = state => state.filter.filter;\n\nexport const filtredContacts = ({ contacts, filter }) => {\n  if (!filter) {\n    return contacts.items;\n  }\n  const normalizedFilter = filter.toLowerCase();\n  const result = contacts.items.filter(({ name, phone }) => {\n    return (\n      name.toLowerCase().includes(normalizedFilter) ||\n      phone.toLowerCase().includes(normalizedFilter)\n    );\n  });\n  return result;\n};\n","import css from './ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/operations';\nimport { getContacts } from 'redux/selector';\nimport Notiflix from 'notiflix';\n\nexport default function ContactForm() {\n  const dispatch = useDispatch();\n  const allContacts = useSelector(getContacts);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.target.elements;\n    if (\n      allContacts.some(\n        contact =>\n          contact.name.toLowerCase().trim() ===\n          form.name.value.toLowerCase().trim()\n      )\n    ) {\n      Notiflix.Notify.warning(`Contact ${form.name.value} already exist`);\n      evt.currentTarget.reset();\n    } else {\n      dispatch(addContact({ name: form.name.value, phone: form.number.value }));\n      evt.currentTarget.reset();\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={css.contactForm}>\n      <label className={css.contactLabel}>\n        Name\n        <input\n          className={css.contactInput}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label className={css.contactLabel}>\n        Number\n        <input\n          className={css.contactInput}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button type=\"submit\" className={css.buttonAddContact}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\",\"contacItem\":\"ContactList_contacItem__ZrmrV\",\"buttonDelete\":\"ContactList_buttonDelete__3LEoC\"};","import React from 'react';\nimport css from './ContactList.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filtredContacts } from 'redux/selector';\nimport { deleteContact, fetchContacts } from 'redux/operations';\nimport { useEffect } from 'react';\n\nconst ContactList = () => {\n  const contacts = useSelector(filtredContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ul className={css.contactList}>\n      {contacts.length !== 0 ? (\n        contacts.map(contact => (\n          <li className={css.contacItem} key={contact.id}>\n            <span>{contact.name}:</span>\n            <span>{contact.phone} </span>\n            <button\n              className={css.buttonDelete}\n              type=\"button\"\n              onClick={() => dispatch(deleteContact(contact.id))}\n            >\n              Delete\n            </button>\n          </li>\n        ))\n      ) : (\n        <p>No data to display...</p>\n      )}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n//import { Container } from '../components/Container/Container';\nimport ContactForm from '../components/ContactForm/ContactForm';\nimport ContactList from '../components/ContactList/ContactList';\nimport { Toaster } from 'react-hot-toast';\nimport { getIsLoading, getError } from 'redux/selector';\nimport Loader from '../components/Loader/Loader';\nimport { fetchContacts } from 'redux/operations';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <ContactForm />\n      <Toaster position=\"top-center\" reverseOrder={false} />\n      {isLoading && !error && <Loader />}\n      <ContactList />\n    </>\n  );\n}\n"],"names":["getContacts","state","contacts","items","getIsLoading","isLoading","getError","error","filtredContacts","filter","normalizedFilter","toLowerCase","name","phone","includes","ContactForm","dispatch","useDispatch","allContacts","useSelector","onSubmit","evt","preventDefault","form","target","elements","some","contact","trim","value","Notiflix","currentTarget","reset","addContact","number","className","css","type","pattern","title","required","useEffect","fetchContacts","length","map","onClick","deleteContact","id","Contacts","position","reverseOrder","Loader"],"sourceRoot":""}